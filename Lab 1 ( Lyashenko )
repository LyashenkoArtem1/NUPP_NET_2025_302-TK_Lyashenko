using System;
using System.Collections.Generic;
using System.Linq;

// –ü—Ä–æ—Å—Ç—ñ—Ä —ñ–º–µ–Ω: Library.Common
namespace Library.Common
{
    // –î–µ–ª–µ–≥–∞—Ç
    public delegate void BookEventHandler(Book book);

    // –ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å
    public class Item
    {
        public Guid Id { get; set; }
        public string Title { get; set; }
        public int Year { get; set; }

        // –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
        public Item()
        {
            Id = Guid.NewGuid();
        }

        // –º–µ—Ç–æ–¥
        public virtual void Display()
        {
            Console.WriteLine($"Item: {Title} ({Year})");
        }
    }

    // –ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è
    public class Book : Item
    {
        public string Author { get; set; }

        // –ø–æ–¥—ñ—è
        public static event BookEventHandler? OnBookCreated;

        // —Å—Ç–∞—Ç–∏—á–Ω–µ –ø–æ–ª–µ
        public static int BookCount;

        // —Å—Ç–∞—Ç–∏—á–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
        static Book()
        {
            BookCount = 0;
        }

        // –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
        public Book(string title, string author, int year)
        {
            Title = title;
            Author = author;
            Year = year;
            BookCount++;
            OnBookCreated?.Invoke(this);
        }

        public override void Display()
        {
            Console.WriteLine($"üìò Book: \"{Title}\" by {Author} ({Year})");
        }
    }

    // –ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è
    public class Magazine : Item
    {
        public int IssueNumber { get; set; }

        // –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
        public Magazine(string title, int year, int issue)
        {
            Title = title;
            Year = year;
            IssueNumber = issue;
        }

        public override void Display()
        {
            Console.WriteLine($"üìñ Magazine: \"{Title}\" Issue #{IssueNumber} ({Year})");
        }
    }

    // –°—Ç–∞—Ç–∏—á–Ω–∏–π –∫–ª–∞—Å –∑ –º–µ—Ç–æ–¥–æ–º —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è
    public static class ItemExtensions
    {
        // –º–µ—Ç–æ–¥ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è
        public static string GetAgeDescription(this Item item)
        {
            int age = DateTime.Now.Year - item.Year;
            return age > 0 ? $"{age} years old" : "New!";
        }
    }

    // –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å CRUD
    public interface ICrudService<T>
    {
        void Create(T element);
        T Read(Guid id);
        IEnumerable<T> ReadAll();
        void Update(T element);
        void Remove(T element);
    }

    // –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è CRUD-—Å–µ—Ä–≤—ñ—Å—É
    public class CrudService<T> : ICrudService<T> where T : Item
    {
        private readonly List<T> _items = new();

        public void Create(T element)
        {
            _items.Add(element);
        }

        public T Read(Guid id)
        {
            return _items.FirstOrDefault(e => e.Id == id)!;
        }

        public IEnumerable<T> ReadAll()
        {
            return _items;
        }

        public void Update(T element)
        {
            var index = _items.FindIndex(e => e.Id == element.Id);
            if (index != -1)
                _items[index] = element;
        }

        public void Remove(T element)
        {
            _items.Remove(element);
        }
    }
}

// –ü—Ä–æ—Å—Ç—ñ—Ä —ñ–º–µ–Ω: Library.Console
namespace Library.ConsoleApp
{
    using Library.Common;

    class Program
    {
        static void Main()
        {
            // –ø—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–æ–¥—ñ—é
            Book.OnBookCreated += book => System.Console.WriteLine($"[–ü–æ–¥—ñ—è] –ù–æ–≤–∞ –∫–Ω–∏–≥–∞ –¥–æ–¥–∞–Ω–∞: \"{book.Title}\"");

            // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É
            var bookService = new CrudService<Item>();

            // –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤
            var b1 = new Book("1984", "George Orwell", 1949);
            var b2 = new Book("The Hobbit", "J.R.R. Tolkien", 1937);
            var m1 = new Magazine("National Geographic", 2023, 7);

            bookService.Create(b1);
            bookService.Create(b2);
            bookService.Create(m1);

            System.Console.WriteLine("\n--- –£—Å—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ ---");
            foreach (var item in bookService.ReadAll())
            {
                item.Display();
                System.Console.WriteLine($"üìÖ Age: {item.GetAgeDescription()}\n");
            }

            System.Console.WriteLine($"üìö –í—Å—å–æ–≥–æ –∫–Ω–∏–≥: {Book.BookCount}");
        }
    }
}
